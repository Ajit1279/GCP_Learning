pipeline {
    agent any
    environment {
        GCP_PROJECT_ID = 'devops2502'
        GCP_REGION     = 'us-central1'
        IMAGE_NAME     = 'my-app'
        IMAGE_TAG      = "${env.BUILD_ID}"
        NEXUS_URL = "<nuxus url:port>"
    }
    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/Ajit1279/GCPStaging.git'
            }
        }
        
        stage('Build Docker Image') {
            steps {
                script {
                    dockerImage = docker.build("${IMAGE_NAME}")
                }
            }
        }
        
        stage('Scan with Trivy') {
            steps {
                script {
                   def scanResults = sh(script: "trivy image --exit-code 1 ${NEXUS_URL}/my-app:${IMAGE_TAG}", returnStatus: true)
                   if (scanResults != 0) {
                          error("Trivy found vulnerabilities in the image.")
                    }
                 }
             }
        }
        
        stage('SonarQube Analysis') {
            steps {
                script {
                    def scannerHome = tool 'SonarQubeScanner'
                    withSonarQubeEnv('SonarQube') { 
                        sh "${scannerHome}/bin/sonar-scanner"
                    }
                }
            }
        }

        stage('Login to Nexus') {
            steps {
                script {
                    sh 'docker login ${NEXUS_URL} -u <username> -p <password>'
                }
            }
        }
            
        stage('Push to Nexus') {
            steps {
                script {
                    dockerImage.push("${NEXUS_URL}/my-app:${IMAGE_TAG}")
                }
            }
        }

        stage('Pull Latest Image from Nexus') {
            steps {
                script {
                    sh 'docker pull ${NEXUS_URL}/my-app:${IMAGE_TAG}'
                }
            }
        }
        
        stage('Deploy to GKE') {
            steps {
                script {
                    sh "gcloud container clusters get-credentials my-gke-cluster --region ${GCP_REGION} --project ${GCP_PROJECT_ID}"
                    sh "kubectl apply -f deployment.yaml"
                }
            }
        }
    }
}
